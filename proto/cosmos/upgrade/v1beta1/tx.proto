// Since: cosmos-sdk 0.46
syntax = "proto3";
package cosmos.upgrade.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos_proto/upgrade/v1beta1/upgrade.proto";

option go_package = "github.com/strangelove-ventures/paramauthority/x/upgrade/types";

// Msg defines the upgrade Msg service.
service Msg {
  // SoftwareUpgrade is a governance operation for initiating a software upgrade.
  //
  // Since: cosmos-sdk 0.46
  rpc SoftwareUpgrade(MsgSoftwareUpgrade) returns (MsgSoftwareUpgradeResponse);
  // CancelUpgrade is a governance operation for cancelling a previously
  // approvid software upgrade.
  //
  // Since: cosmos-sdk 0.46
  rpc CancelUpgrade(MsgCancelUpgrade) returns (MsgCancelUpgradeResponse);
}

// MsgSoftwareUpgrade is the Msg/SoftwareUpgrade request type.
//
// Since: cosmos-sdk 0.46
message MsgSoftwareUpgrade {
  // authority is the address of the governance account.
  string authority = 1;

  // plan is the upgrade plan.
  Plan plan = 2 [(gogoproto.nullable) = false,(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/x/upgrade/types.Plan"];
}

// MsgSoftwareUpgradeResponse is the Msg/SoftwareUpgrade response type.
//
// Since: cosmos-sdk 0.46
message MsgSoftwareUpgradeResponse {}

// MsgCancelUpgrade is the Msg/CancelUpgrade request type.
//
// Since: cosmos-sdk 0.46
message MsgCancelUpgrade {
  // authority is the address of the governance account.
  string authority = 1;
}

// MsgCancelUpgradeResponse is the Msg/CancelUpgrade response type.
//
// Since: cosmos-sdk 0.46
message MsgCancelUpgradeResponse {}
